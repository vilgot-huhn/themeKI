}
KI_theme_colors_2 <- c(
background = '#EDF4F4',
text       = '#4F0433',
panel      = '#FFFFFF',
border     = '#000000',
lighter    = '#FEEEEB',
light      = '#FF876F',
medium     = '#870052',
dark       = '#4F0433'
)
theme_KI_2 <- function(...){
# CUSTOM THEME:
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], size = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], size = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
#Simulate data to exemplify plots
x <- rnorm(50)
y <- rnorm(50)
z <- rnorm(50)
g <- rbinom(50, size = 4, prob = 0.6)
df <- data.frame(x,y,z,g=as.factor(g))
#example of theme 1
ggplot(df, aes(x=x,y=y, color = g)) + geom_point() +
theme_KI() + scale_color_KI_discrete(colors = 3) +
xlab("ch-changes") + ylab("Testing some Stuff") + ggtitle("Figure 1.")
#example of theme 2 and continuous data
ggplot(df, aes(x=x,y=y, color = z)) + geom_point() +
theme_KI_2() + scale_color_KI_continuous() +
xlab("changes") + ylab("Testing some Stuff") + ggtitle("Figure 2.")
df2 <- data.frame(A=rbinom(100,5,prob=0.2),B=as.factor(rbinom(100,7,prob = 0.4)))
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI_2() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis means nothing") + ylab("Just testing some Stuff") + ggtitle("Figure 3.")
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI() + scale_fill_KI_discrete(colors = 1) +
xlab("changes") + ylab("Testing some Stuff") + ggtitle("Figure 4.")
theme_KI_2 <- function(...){
# CUSTOM THEME:
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], size = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], size = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "serif"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
#Simulate data to exemplify plots
x <- rnorm(50)
y <- rnorm(50)
z <- rnorm(50)
g <- rbinom(50, size = 4, prob = 0.6)
df <- data.frame(x,y,z,g=as.factor(g))
#example of theme 1
ggplot(df, aes(x=x,y=y, color = g)) + geom_point() +
theme_KI() + scale_color_KI_discrete(colors = 3) +
xlab("ch-changes") + ylab("Testing some Stuff") + ggtitle("Figure 1.")
#example of theme 2 and continuous data
ggplot(df, aes(x=x,y=y, color = z)) + geom_point() +
theme_KI_2() + scale_color_KI_continuous() +
xlab("changes") + ylab("Testing some Stuff") + ggtitle("Figure 2.")
df2 <- data.frame(A=rbinom(100,5,prob=0.2),B=as.factor(rbinom(100,7,prob = 0.4)))
theme_KI_2 <- function(...){
# CUSTOM THEME:
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], size = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], size = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
#Simulate data to exemplify plots
x <- rnorm(50)
y <- rnorm(50)
z <- rnorm(50)
g <- rbinom(50, size = 4, prob = 0.6)
df <- data.frame(x,y,z,g=as.factor(g))
#example of theme 1
ggplot(df, aes(x=x,y=y, color = g)) + geom_point() +
theme_KI() + scale_color_KI_discrete(colors = 3) +
xlab("ch-changes") + ylab("Testing some Stuff") + ggtitle("Figure 1.")
#example of theme 2 and continuous data
ggplot(df, aes(x=x,y=y, color = z)) + geom_point() +
theme_KI_2() + scale_color_KI_continuous() +
xlab("changes") + ylab("Testing some Stuff") + ggtitle("Figure 2.")
theme_KI_2 <- function(...){
# CUSTOM THEME:
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], size = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], size = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
#Simulate data to exemplify plots
x <- rnorm(50)
y <- rnorm(50)
z <- rnorm(50)
g <- rbinom(50, size = 4, prob = 0.6)
df <- data.frame(x,y,z,g=as.factor(g))
#example of theme 1
ggplot(df, aes(x=x,y=y, color = g)) + geom_point() +
theme_KI() + scale_color_KI_discrete(colors = 3) +
xlab("ch-changes") + ylab("Testing some Stuff") + ggtitle("Figure 1.")
#example of theme 2 and continuous data
ggplot(df, aes(x=x,y=y, color = z)) + geom_point() +
theme_KI_2() + scale_color_KI_continuous() +
xlab("changes") + ylab("Testing some Stuff") + ggtitle("Figure 2.")
#Theme functions
theme_KI <- function(...){
print("remember to install font and use showtext_auto()")
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors["background"]),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = KI_theme_colors["background"], linewidth = 0.9),
text = element_text(color = KI_theme_colors["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors["text"]),
axis.ticks = element_line(color = KI_theme_colors["background"],linewidth=1),
legend.background = element_rect(fill = KI_theme_colors["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors["panel"], colour = KI_theme_colors["border"]),
strip.text = element_text(colour = KI_theme_colors["text"]),
...
)
}
theme_KI_2 <- function(...){
# CUSTOM THEME:
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], linewidth = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], linewidth = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI_2() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis means nothing") + ylab("Just testing some Stuff") + ggtitle("Figure 3.")
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI() + scale_fill_KI_discrete(colors = 1) +
xlab("changes") + ylab("Testing some Stuff") + ggtitle("Figure 4.")
?showtext_auto
#color palettes
KI_colors <- c("#4F0433","#FF876F","#870052","#FEEEEB",
"#4DB5BC","#CCEBED","#666666","#F1F1F1",
"#54B986","#C7ECDC","#FFC66D","#FFE7C2")
KI_pal <- function () {
scales::manual_pal(KI_colors)
}
#Alternative order with fewer bright colors
KI_colors_2 <- c("#870052","#FF876F","#4F0433","#4DB5BC",
"#54B986","#666666","#FFC66D","#FFE7C2")
KI_pal_2 <- function () {
scales::manual_pal(KI_colors_2)
}
#Additional alternative order with fewer bright colors, different order
KI_colors_3 <- c("#870052","#FF876F","#4DB5BC","#54B986",
"#4F0433","#F59A00","#666666","#C7ECDC",
"#FFC66D")
KI_pal_3 <- function () {
scales::manual_pal(KI_colors_3)
}
#Color for the theme, panel etc
KI_theme_colors <- c(
background = '#FFFFFF',
text       = '#4F0433',
panel      = '#EDF4F4',
border     = '#000000',
lighter    = '#FEEEEB',
light      = '#FF876F',
medium     = '#870052',
dark       = '#4F0433'
)
KI_theme_colors_2 <- c(
background = '#EDF4F4',
text       = '#4F0433',
panel      = '#FFFFFF',
border     = '#000000',
lighter    = '#FEEEEB',
light      = '#FF876F',
medium     = '#870052',
dark       = '#4F0433'
)
#Colour is set to palette 1 by default but can be changed to 2 or 3
scale_color_KI_discrete <- function(colors = 1 ,...){
if(colors == 1) {
ggplot2::discrete_scale("colour","KI",palette = KI_pal())
} else if(colors == 2){
ggplot2::discrete_scale("colour","KI",palette = KI_pal_2())
} else if(colors == 3){
ggplot2::discrete_scale("colour","KI",palette = KI_pal_3())
}
}
scale_fill_KI_discrete <- function(colors = 1 ,...){
if(colors == 1) {
ggplot2::discrete_scale("fill","KI",palette = KI_pal())
} else if(colors == 2){
ggplot2::discrete_scale("fill","KI",palette = KI_pal_2())
} else if(colors == 3){
ggplot2::discrete_scale("fill","KI",palette = KI_pal_3())
}
}
#Continuous colors based on theme
scale_fill_KI_continuous <- function(...) {
ggplot2::scale_fill_gradient(low = KI_theme_colors["dark"], high = KI_theme_colors["light"], ...)
}
scale_color_KI_continuous <- function(...) {
ggplot2::scale_color_gradient(low = KI_theme_colors["dark"], high = KI_theme_colors["light"], ...)
}
#Theme functions
theme_KI <- function(...){
showtext::showtext_auto()
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors["background"]),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = KI_theme_colors["background"], linewidth = 0.9),
text = element_text(color = KI_theme_colors["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors["text"]),
axis.ticks = element_line(color = KI_theme_colors["background"],linewidth=1),
legend.background = element_rect(fill = KI_theme_colors["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors["panel"], colour = KI_theme_colors["border"]),
strip.text = element_text(colour = KI_theme_colors["text"]),
...
)
}
theme_KI_2 <- function(...){
showtext::showtext_auto()
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], linewidth = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], linewidth = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
#First make sure to install all required packages (ggplot2,sysfonts,showtext)
library(ggplot2)
#Add official KI font 'DM sans':
library(sysfonts)
library(showtext)
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI_2() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis means nothing") + ylab("Just testing some Stuff") + ggtitle("Figure 3.")
#Simulate data to exemplify plots
x <- rnorm(50)
y <- rnorm(50)
z <- rnorm(50)
g <- rbinom(50, size = 4, prob = 0.6)
df <- data.frame(x,y,z,g=as.factor(g))
#example of theme 1
ggplot(df, aes(x=x,y=y, color = g)) + geom_point() +
theme_KI() + scale_color_KI_discrete(colors = 3) +
xlab("ch-changes") + ylab("Testing some Stuff") + ggtitle("Figure 1.")
#Add official KI font 'DM sans':
library(sysfonts)
library(showtext)
font_add_google("DM Sans") #installs font form google
?font_add_google
#color palettes
KI_colors <- c("#4F0433","#FF876F","#870052","#FEEEEB",
"#4DB5BC","#CCEBED","#666666","#F1F1F1",
"#54B986","#C7ECDC","#FFC66D","#FFE7C2")
KI_pal <- function () {
scales::manual_pal(KI_colors)
}
#Alternative order with fewer bright colors
KI_colors_2 <- c("#870052","#FF876F","#4F0433","#4DB5BC",
"#54B986","#666666","#FFC66D","#FFE7C2")
KI_pal_2 <- function () {
scales::manual_pal(KI_colors_2)
}
#Additional alternative order with fewer bright colors, different order
KI_colors_3 <- c("#870052","#FF876F","#4DB5BC","#54B986",
"#4F0433","#F59A00","#666666","#C7ECDC",
"#FFC66D")
KI_pal_3 <- function () {
scales::manual_pal(KI_colors_3)
}
#Color for the theme, panel etc
KI_theme_colors <- c(
background = '#FFFFFF',
text       = '#4F0433',
panel      = '#EDF4F4',
border     = '#000000',
lighter    = '#FEEEEB',
light      = '#FF876F',
medium     = '#870052',
dark       = '#4F0433'
)
KI_theme_colors_2 <- c(
background = '#EDF4F4',
text       = '#4F0433',
panel      = '#FFFFFF',
border     = '#000000',
lighter    = '#FEEEEB',
light      = '#FF876F',
medium     = '#870052',
dark       = '#4F0433'
)
#' Theme Functions
#'
#' These functions let you add one of two KI themes.
#' @examples
#' ggplot() + theme_KI()
theme_KI <- function(...){
showtext::showtext_auto()
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors["background"]),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = KI_theme_colors["background"], linewidth = 0.9),
text = element_text(color = KI_theme_colors["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors["text"]),
axis.ticks = element_line(color = KI_theme_colors["background"],linewidth=1),
legend.background = element_rect(fill = KI_theme_colors["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors["panel"], colour = KI_theme_colors["border"]),
strip.text = element_text(colour = KI_theme_colors["text"]),
...
)
}
#' Theme Functions 2
#'
#' These functions let you add one of two KI themes.
#' @examples
#' ggplot() + theme_KI_2()
#'
theme_KI_2 <- function(...){
showtext::showtext_auto()
ggplot2::theme(
plot.background = element_rect(fill = KI_theme_colors_2["background"]),
panel.grid.minor = element_line(color = KI_theme_colors_2["background"], linewidth = 0.5),
panel.grid.major = element_line(color = KI_theme_colors_2["background"], linewidth = 0.9),
text = element_text(color = KI_theme_colors_2["text"], family = "DM Sans"),
title = element_text(size=22),
panel.background = element_rect(fill = KI_theme_colors_2["panel"]),
panel.border = element_rect(fill = NA, color = KI_theme_colors_2["border"],linewidth= NA),
axis.title = element_text(size=18),
axis.text = element_text(size=15,color = KI_theme_colors_2["text"]),
axis.ticks = element_blank(),
legend.background = element_rect(fill = KI_theme_colors_2["panel"], color = NA),
strip.background = element_rect(fill = KI_theme_colors_2["panel"], colour = KI_theme_colors_2["border"]),
strip.text = element_text(colour = KI_theme_colors_2["text"]),
...
)
}
#Colour is set to palette 1 by default but can be changed to 2 or 3
scale_color_KI_discrete <- function(colors = 1 ,...){
if(colors == 1) {
ggplot2::discrete_scale("colour","KI",palette = KI_pal())
} else if(colors == 2){
ggplot2::discrete_scale("colour","KI",palette = KI_pal_2())
} else if(colors == 3){
ggplot2::discrete_scale("colour","KI",palette = KI_pal_3())
}
}
scale_color_KI_discrete_pilot <- function(colors = "a" ,...){
switch(colors,
a = ggplot2::discrete_scale("colour","KI",palette = KI_pal()),
b = ggplot2::discrete_scale("colour","KI",palette = KI_pal_2()),
c = ggplot2::discrete_scale("colour","KI",palette = KI_pal_3()),
stop("unknown input, input a letter e.g. 'a' ")
)
}
scale_fill_KI_discrete <- function(colors = 1 ,...){
if(colors == 1) {
ggplot2::discrete_scale("fill","KI",palette = KI_pal())
} else if(colors == 2){
ggplot2::discrete_scale("fill","KI",palette = KI_pal_2())
} else if(colors == 3){
ggplot2::discrete_scale("fill","KI",palette = KI_pal_3())
}
}
#Continuous colors based on theme
scale_fill_KI_continuous <- function(...) {
ggplot2::scale_fill_gradient(low = KI_theme_colors["dark"], high = KI_theme_colors["light"], ...)
}
scale_color_KI_continuous <- function(...) {
ggplot2::scale_color_gradient(low = KI_theme_colors["dark"], high = KI_theme_colors["light"], ...)
}
load("~/GitHub/themeKI/.RData")
load_all()
library(devtools)
load_all()
document()
pkgload::dev_help('theme_KI')
document()
pkgload::dev_help('theme_KI')
document()
document()
pkgload::dev_help('scale_color_KI_discrete')
pkgload::dev_help('scale_color_KI_discrete')
document()
document()
pkgload::dev_help('scale_color_KI_discrete')
pkgload::dev_help('scale_color_KI_continuous')
load_all()
?theme_KI()
install.packages("remotes")
remotes::install_github("vilgot-huhn/themeKI")
library(themeKI)
library(ggplot2)
#fake data
df2 <- data.frame(A=rbinom(100,5,prob=0.2),B=as.factor(rbinom(100,7,prob = 0.4)))
#theme 1
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis means nothing") + ylab("This is nonsense data") + ggtitle("Figure 2.")
#theme 2
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI_2() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis pretty font") + ylab("Total counts") + ggtitle("Figure 1.")
library(sysfonts)
font_add_google("DM Sans")
library(ggplot2)
#fake data
df2 <- data.frame(A=rbinom(100,5,prob=0.2),B=as.factor(rbinom(100,7,prob = 0.4)))
#theme 1
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis means nothing") + ylab("This is nonsense data") + ggtitle("Figure 2.")
#theme 2
ggplot(df2, aes(A, fill = B)) + geom_bar(colour = "black", position = position_dodge(preserve = "single")) +
theme_KI_2() + scale_fill_KI_discrete(colors = 1) +
xlab("X-axis pretty font") + ylab("Total counts") + ggtitle("Figure 1.")
View(df2)
load_all()
devtools::load_all()
load_all()
devtools::load_all()
devtools::install()
.onAttach <- function(libname, pkgname) {
packageStartupMessage("Welcome to my package ;)")
}
??use_r
usethis::use_r(".onAttach")
.onAttach <- function(libname, pkgname) {
packageStartupMessage('Reminder: You may need to re-run sysfonts::font_add_google("DM Sans") new sessions in order to get the correct font')
}
load_all()
devtools::load_all()
devtools::install()
